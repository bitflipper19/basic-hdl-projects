$date
	Fri Aug 01 23:30:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_adder_tb $end
$var wire 4 ! result [3:0] $end
$var wire 1 " carry $end
$var reg 1 # Cin $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$scope module DUT $end
$var wire 1 # Cin $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 4 ( w [3:0] $end
$var wire 4 ) result [3:0] $end
$var wire 1 " carry $end
$scope module f0 $end
$var wire 1 # Cin $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , cout $end
$var wire 1 - sum $end
$var wire 1 . w1 $end
$var wire 1 / w2 $end
$var wire 1 0 w3 $end
$var wire 1 1 w4 $end
$upscope $end
$scope module f1 $end
$var wire 1 2 Cin $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cout $end
$var wire 1 6 sum $end
$var wire 1 7 w1 $end
$var wire 1 8 w2 $end
$var wire 1 9 w3 $end
$var wire 1 : w4 $end
$upscope $end
$scope module f2 $end
$var wire 1 ; Cin $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > cout $end
$var wire 1 ? sum $end
$var wire 1 @ w1 $end
$var wire 1 A w2 $end
$var wire 1 B w3 $end
$var wire 1 C w4 $end
$upscope $end
$scope module f3 $end
$var wire 1 D Cin $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cout $end
$var wire 1 H sum $end
$var wire 1 I w1 $end
$var wire 1 J w2 $end
$var wire 1 K w3 $end
$var wire 1 L w4 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
17
16
05
14
03
02
01
00
0/
1.
1-
0,
0+
1*
b11 )
b0 (
b10 '
b1 &
b10 %
b1 $
0#
0"
b11 !
$end
#5
1"
1G
1L
1D
1>
1C
1;
15
06
1:
12
0-
b1111 (
1,
0?
b0 !
b0 )
0H
0.
1/
1@
1I
1+
04
13
1<
1E
b1 %
b1 '
b1111 $
b1111 &
#10
1B
1.
0/
0C
b0 !
b0 )
0-
10
1=
0*
0<
1#
b101 %
b101 '
b1010 $
b1010 &
#15
16
1H
1-
b1111 !
b1111 )
1?
07
18
19
0I
1J
1K
0.
1/
11
0@
1A
1C
14
1F
1*
1<
b1111 %
b1111 '
b1111 $
b1111 &
#20
