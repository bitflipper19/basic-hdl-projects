$date
	Wed Aug 20 05:55:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_8bitCSA $end
$var wire 1 ! cout $end
$var wire 8 " sum [7:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 1 ! cout $end
$var wire 8 ( sum [7:0] $end
$var wire 1 ) coutH1 $end
$var wire 1 * coutH0 $end
$var wire 1 + cout0 $end
$var wire 4 , b1 [3:0] $end
$var wire 4 - b0 [3:0] $end
$scope module aH0 $end
$var wire 4 . A [3:0] $end
$var wire 4 / B [3:0] $end
$var wire 1 0 C0 $end
$var wire 1 * Cout $end
$var wire 1 1 NC0 $end
$var wire 4 2 norb [3:0] $end
$var wire 4 3 nandb [3:0] $end
$var wire 4 4 carryb [3:0] $end
$var wire 4 5 andb [3:0] $end
$var wire 4 6 SUM [3:0] $end
$var wire 5 7 C4b [4:0] $end
$var wire 4 8 C3b [3:0] $end
$var wire 3 9 C2b [2:0] $end
$var wire 2 : C1b [1:0] $end
$upscope $end
$scope module aH1 $end
$var wire 4 ; A [3:0] $end
$var wire 4 < B [3:0] $end
$var wire 1 = C0 $end
$var wire 1 ) Cout $end
$var wire 1 > NC0 $end
$var wire 4 ? norb [3:0] $end
$var wire 4 @ nandb [3:0] $end
$var wire 4 A carryb [3:0] $end
$var wire 4 B andb [3:0] $end
$var wire 4 C SUM [3:0] $end
$var wire 5 D C4b [4:0] $end
$var wire 4 E C3b [3:0] $end
$var wire 3 F C2b [2:0] $end
$var wire 2 G C1b [1:0] $end
$upscope $end
$scope module aL0 $end
$var wire 4 H A [3:0] $end
$var wire 4 I B [3:0] $end
$var wire 1 % C0 $end
$var wire 1 + Cout $end
$var wire 1 J NC0 $end
$var wire 4 K norb [3:0] $end
$var wire 4 L nandb [3:0] $end
$var wire 4 M carryb [3:0] $end
$var wire 4 N andb [3:0] $end
$var wire 4 O SUM [3:0] $end
$var wire 5 P C4b [4:0] $end
$var wire 4 Q C3b [3:0] $end
$var wire 3 R C2b [2:0] $end
$var wire 2 S C1b [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1 S
b1 R
b0 Q
b0 P
b11 O
b1011 N
b1000 M
b1011 L
b0 K
1J
b100 I
b1111 H
b0 G
b100 F
b1100 E
b11100 D
b10 C
b1 B
b11 A
b1111 @
b1110 ?
0>
1=
b1 <
b0 ;
b1 :
b101 9
b1101 8
b11101 7
b1 6
b1 5
b0 4
b1111 3
b1110 2
11
00
b1 /
b0 .
b1 -
b10 ,
1+
0*
0)
b100011 (
b10100 '
b1111 &
0%
b10100 $
b1111 #
b100011 "
z!
$end
#10
b10011011 "
b10011011 (
b1011 O
0+
b1001 -
b1001 6
b1010 ,
b1010 C
b1100 4
b1111 A
b11 N
b101 5
b101 B
b10000 P
b0 9
b0 8
b10000 7
b0 F
b0 E
b10000 D
b1000 K
b1101 3
b1000 2
b1101 @
b1000 ?
b111 I
b11 /
b11 <
b100 H
b110 .
b110 ;
b110111 $
b110111 '
b1100100 #
b1100100 &
#20
1*
1)
b1000 4
b10 -
b10 6
b1001 A
b11 ,
b11 C
b11 :
b10 G
b110 Q
b1100 N
b110 P
b11 9
b1010 5
b0 7
b10 F
b1010 B
b0 D
b101101 "
b101101 (
b1101 O
b1111 L
b11 K
b1011 3
b1 2
b1011 @
b1 ?
b1 M
b10 S
b110 R
0J
b100 I
b110 /
b110 <
b1000 H
b1100 .
b1100 ;
1%
b1100100 $
b1100100 '
b11001000 #
b11001000 &
#30
0*
1+
b0 4
b1111 -
b1111 6
b0 ,
b0 C
b1111 A
b1 7
b1110 N
b1 8
b1111 5
b1111 B
b1 :
b1 9
b0 G
b0 F
b0 "
b0 (
b0 O
b0 P
b1111 3
b1111 @
b1110 L
b0 K
b0 2
b0 ?
b1110 M
b0 S
b0 R
b0 Q
1J
b1 I
b0 /
b0 <
b1111 H
b1111 .
b1111 ;
0%
b1 $
b1 '
b11111111 #
b11111111 &
#40
